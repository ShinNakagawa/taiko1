{"version":3,"sources":["../../src/pages/home/create-song/create-song.module.ts","../../src/pages/home/create-song/create-song.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { CreateSongPage } from './create-song';\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\n\n@NgModule({\n  declarations: [\n    CreateSongPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(CreateSongPage),\n  ],\n  exports: [\n    CreateSongPage\n  ]\n})\n\nexport class CreateSongPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/create-song/create-song.module.ts","import { Component } from '@angular/core';\nimport { ViewController, IonicPage, ToastController } from 'ionic-angular';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { AngularFireDatabase } from 'angularfire2/database';\n//import { AuthProvider } from '../../../providers/auth/auth';\n\n@IonicPage()\n@Component({\n  selector: 'page-create-song',\n  templateUrl: 'create-song.html'\n})\nexport class CreateSongPage {\n  songForm: FormGroup;\n  name: AbstractControl;\n  imageUrl: AbstractControl;\n  description: AbstractControl;\n  fullVideoID: AbstractControl;\n  playListID: AbstractControl;\n  userid: string;\n  basePath = 'songs';\n\n  constructor(\n    public viewCtrl: ViewController, \n    public fb: FormBuilder,\n    private db: AngularFireDatabase,\n    public toastCtrl: ToastController,\n    //private auth: AuthProvider\n  ) {\n      // if (this.auth.currentUser) {       \n      //   console.log('this.auth.currentUser=', this.auth.currentUser);\n      //   console.log('this.auth.currentUserId=', this.auth.currentUserId);\n      //   this.userid = this.auth.currentUserId;\n      // } else {\n      //   console.log('Unable to read userID, so add timer to wait for user ID');       \n      //   let toast = this.toastCtrl.create({\n      //     message: 'Please wait for a second.',\n      //     duration: 3000,\n      //     position: 'top'\n      //   });\n      //   toast.present();\n      // }\n      this.userid = '';\n      this.songForm = this.fb.group({  \n        'name': ['', Validators.compose([Validators.required, Validators.minLength(1)])],\n        'imageUrl': ['', Validators.compose([Validators.required, Validators.minLength(1)])],\n        'description': ['', Validators.compose([Validators.required, Validators.minLength(1)])],\n        'fullVideoID': ['', Validators.compose([Validators.required, Validators.minLength(1)])],\n        'playListID': ['', Validators.compose([Validators.required, Validators.minLength(1)])],\n      });\n      this.name = this.songForm.controls['name'];  \n      this.imageUrl = this.songForm.controls['imageUrl'];  \n      this.description = this.songForm.controls['description'];  \n      this.fullVideoID = this.songForm.controls['fullVideoID'];  \n      this.playListID = this.songForm.controls['playListID'];  \n    }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n\n  create(): void{\n    const timestamp = new Date();\n    const path = `${this.basePath}`;\n    const data = {\n      name: this.name.value,\n      imageUrl: this.imageUrl.value,\n      description: this.description.value,\n      fullVideoID: this.fullVideoID.value,\n      playListID: this.playListID.value,\n      date: timestamp,\n      userid: this.userid\n    };\n    let key = this.db.list(path).push(data).key;\n    //update id as key\n    const pathKey = `${this.basePath}/${key}`;\n    const dataKey = {\n      id: key\n    };\n    this.db.object(pathKey).update(dataKey)\n      .catch(error => console.log(error));\n    this.viewCtrl.dismiss({title: \"created a song\"});    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/create-song/create-song.ts"],"sourceRoot":""}